{"version":3,"sources":["../../src/pages/score/score.module.ts","../../src/pages/score/score.ts"],"names":[],"mappings":"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","file":"2.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ScorePage } from './score';\n\n@NgModule({\n  declarations: [\n    ScorePage,\n  ],\n  imports: [\n    IonicPageModule.forChild(ScorePage),\n  ],\n})\nexport class ScorePageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/score/score.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { AngularFireDatabase } from 'angularfire2/database';\nimport { UserModel } from '../../Models/user.model';\nimport { AuthService} from '../../services/auth.service';\nimport { RoomsService } from '../../services/rooms.service';\n\n\n@IonicPage()\n@Component({\n  selector: 'page-score',\n  templateUrl: 'score.html',\n})\nexport class ScorePage {\n\n  roundKey: string;\n  currentUser: UserModel;\n  users: UserModel[];\n  spy: UserModel;\n  winUsers: UserModel[] =[];\n  loseUsers: UserModel[] =[];\n  spyState: string;\n  isSpyWon: boolean;\n  isGreatGuess: boolean;\n  intervalId: any;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, public af: AngularFireDatabase,\n              private auth: AuthService, private roomsSerivce: RoomsService) {\n    \n    this.intervalId = setInterval(()=> {\n      this.backToLobby();\n    }, 6000);\n\n    this.users = roomsSerivce.getNonSpyPlayers();\n    this.currentUser = this.auth.currentUser;\n\n    this.roundKey = this.navParams.get('roundKey');\n    this.spyState = this.navParams.get('spyState');\n    \n    this.af.list(`rounds/${roomsSerivce.currentRoom.$key}/${this.roundKey}/wins`).subscribe(t=>{\n      t.forEach( user => {\n        let userKey = user.$value;\n          this.winUsers.push(this.roomsSerivce.getUser(userKey));\n      });\n    });\n    this.af.list(`rounds/${roomsSerivce.currentRoom.$key}/${this.roundKey}/loses`).subscribe(t=>{\n      t.forEach( user => {\n        let userKey = user.$value;\n        \n          this.loseUsers.push(this.roomsSerivce.getUser(userKey));\n      });\n    });\n\n    // get the spy user\n    this.af.object(`users/${this.roomsSerivce.getSpy()}/`).subscribe(t=> {\n      this.spy = t;\n    });\n  }\n\n  ionViewWillLeave() {\n    clearInterval(this.intervalId);\n  }\n\n  public backToLobby() {\n    \n    // set the round as done\n    this.af.object(`rounds/${this.roomsSerivce.currentRoom.$key}/${this.roundKey}/state`).set(\"done\");\n\n    // this.navCtrl.push('LobbyPage', {\n    //   roomKey: this.roomsSerivce.currentRoom.$key\n    // });\n\n    //this.af.object(`rooms/${this.roomKey}/isCategorySelected`).set(false);\n    //this.af.object(`rooms/${this.roomKey}/selector`).set(\"\");\n    this.navCtrl.popTo(this.navCtrl.getByIndex(1));\n    // console.log(\"pop to\");\n  }\n\n  getNewPointsForLosers() : number {\n    if(this.spyState == \"lose\") {\n      return 3;\n    }\n    return 0;\n  }\n\n  getPointsOfSpy() : number {\n    if(this.spyState == \"win\") {\n      this.isSpyWon = true;\n      return 5;\n    }\n    if(this.spyState == \"semi-win\"){\n      this.isSpyWon = true;\n      this.isGreatGuess = true;\n      return 3;\n    }\n    return 0;\n  }\n\n  getNewPointsForWinners() : number {\n    return this.getNewPointsForLosers() + 1;\n  }\n}\n\n//rules\n// Spy Wins:\n// spy earn 5 points.\n// players who voted for spy: 1 points.\n\n// Spy Loses:\n// players who voted for spy: 1 points\n// all players execpt spy earn 3 points\n// If spy guess right he earns 3 points.\n\n\n// WEBPACK FOOTER //\n// ./src/pages/score/score.ts"],"sourceRoot":""}